{"version":3,"sources":["component/project.jsx"],"names":["ProjectCard","title","this","props","index","match","className","slice","time","React","Component","Project","state","project_list","load","error","error_msg","time_test","genPromise","then","data","code","forEach","el","project_time","Date","getFullYear","sort","a","b","setState","console","log","message","map","key","project_name","abstract","tag","link","ContentLoader","style","width","height","text"],"mappings":"kPAkCMA,E,iLAEE,IAAMC,EAAQC,KAAKC,MAAMF,MAEnBG,EADKF,KAAKC,MAAMF,MAAMI,MAAM,WAClB,MAChB,OACI,4BACI,6BACI,0BAAMC,UAAU,oCACXL,EAAMM,MAAM,EAAGH,IACZF,KAAKC,MAAMK,KACnB,2BACKP,EAAMM,MAAMH,U,GAZXK,IAAMC,WA6BXC,E,YACjB,WAAYR,GAAQ,IAAD,8BACf,4CAAMA,KACDS,MAAQ,CACTC,aAAc,GACdC,MAAM,EACNC,OAAO,EACPC,UAAW,SANA,E,iFASC,IAAD,OACTC,EAAW,8IACjBC,YAAW,MAAM,kDAAkDC,MAC/D,SAACC,GACkB,IAAZA,EAAKC,MACJD,EAAKA,KAAKE,SAAQ,SAACC,GACf,IAAIC,EAAaD,EAAGtB,MAAMI,MAAMY,GAEhCM,EAAGf,KAAKgB,EAAa,IAAIA,EAAa,KAAI,IAAIC,MAAOC,iBAEzDN,EAAKA,KAAKO,MAAK,SAACC,EAAGC,GACf,OAAOA,EAAErB,KAAOoB,EAAEpB,QAGtB,EAAKsB,SAAS,CACVjB,aAAcO,EAAKA,KACnBN,MAAM,KAGV,EAAKgB,SAAS,CACVf,OAAO,OAGhB,SAACA,GACAgB,QAAQC,IAAIjB,GACZ,EAAKe,SAAS,CACVf,OAAO,EACPC,UAAWD,EAAMkB,e,+BAS7B,IAAMpB,EAAeX,KAAKU,MAAMC,aAAaqB,KAAI,SAACX,EAAInB,GAAL,OAC7C,kBAACJ,EAAD,CAAamC,IAAK/B,EACdH,MAAOsB,EAAGa,aACV5B,KAAMe,EAAGC,aACTa,SAAUd,EAAGc,SACbC,IAAKf,EAAGe,IACRC,KAAMhB,EAAGgB,UAEXC,EAAgB,kBACjB,yBAAKlC,UAAU,sBACZ,yBAAKA,UAAU,0DACXmC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,WACnC,yBAAKrC,UAAU,0DACXmC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,WACnC,yBAAKrC,UAAU,0DACXmC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,aAE3C,OAAIzC,KAAKU,MAAMG,MAEP,6BAAK,kBAAC,IAAD,MACD,yBAAKT,UAAU,+BAEX,kBAAC,IAAD,CAAYsC,KAAM1C,KAAKU,MAAMI,cAIpCd,KAAKU,MAAME,KAEZ,iCAAM,kBAAC,IAAD,MACF,yBAAKR,UAAU,+BAEX,wBAAIA,UAAU,uBAAd,gBACA,4BACKO,KAMb,6BAAK,kBAAC,IAAD,MACD,yBAAKP,UAAU,+BAEX,yBAAKA,UAAU,0DACXmC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,WACnC,kBAACH,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,Y,GA5Fa/B,IAAMC","file":"static/js/7.b97b9aa3.chunk.js","sourcesContent":["import React from 'react';\nimport { genPromise } from '../plugins';\nimport ResultView from './result.jsx';\nimport Header from './header'\n\n\n\n/*\nexport class ProjectCard extends React.Component{\n    render(){\n        return(\n            <div className='card'>\n                <div className=\"card-body\">\n                    <span className=\"badge\">{this.props.tag}</span>\n                    <h5 className=\"card-title\">\n                        {this.props.title}\n                        \n                    </h5>\n                    <p className=\"card-text\">{this.props.abstract}</p>\n                    {this.props.link&&<a className='btn btn-self' href={this.props.link}>Link</a>}\n                </div>\n            </div>\n        )\n    }\n}\n*/\n\n/**\n * @description 单个项目展示\n * @author zhghxy\n * @date 2020-03-21\n * @class ProjectCard\n * @extends {React.Component}\n */\nclass ProjectCard extends React.Component {\n    render() {\n        const title = this.props.title;\n        const mm = this.props.title.match(/[\\n\\r]+/);\n        const index = mm['index'];\n        return (\n            <li>\n                <div >\n                    <span className=\"badge badge-pill badge-secondary\">\n                        {title.slice(0, index)}\n                    </span>{this.props.time}\n                    <p>\n                        {title.slice(index)}\n                    </p>\n                </div>\n            </li>\n        )\n    }\n}\n\n\n/**\n * @description 项目展示页面\n * @author zhghxy\n * @date 2020-03-21\n * @export\n * @class Project\n * @extends {React.Component}\n */\nexport default class Project extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            project_list: [],\n            load: false,\n            error: false,\n            error_msg: 'error'\n        }\n    }\n    componentDidMount(){\n        const time_test= /((\\d{4})年(\\d{1,2}月)?[-至](\\d{4})年(\\d{1,2}月)?)|((\\d{4})\\.\\d{1,2}\\.\\d{1,2}[-至](\\d{4})\\.\\d{1,2}\\.\\d{1,2})[\\n\\r]*$/;\n        genPromise('GET','http://39.100.113.162/info/project/project.php').then(\n            (data)=>{\n                if(data.code===0){\n                    data.data.forEach((el)=>{\n                        var project_time=el.title.match(time_test);\n                        \n                        el.time=project_time[2]||project_time[7]||new Date().getFullYear();\n                    })\n                    data.data.sort((a, b) => {\n                        return b.time - a.time;\n                    })\n                    //console.log(data.data);\n                    this.setState({\n                        project_list: data.data,\n                        load: true\n                    })\n                } else {\n                    this.setState({\n                        error: true\n                    })\n                }\n            }, (error) => {\n                console.log(error);\n                this.setState({\n                    error: true,\n                    error_msg: error.message\n                })\n            }\n        )\n    }\n\n    render() {\n\n\n        const project_list = this.state.project_list.map((el, index) =>\n            <ProjectCard key={index}\n                title={el.project_name}\n                time={el.project_time}\n                abstract={el.abstract}\n                tag={el.tag}\n                link={el.link} />\n        );\n        const ContentLoader = () =>\n            (<div className='content-loader p-2'>\n                <div className='conent-loader-rect rounded-pill bg-grey animated-bg m-3'\n                    style={{ width: '85%', height: '.8rem' }}></div>\n                <div className='conent-loader-rect rounded-pill bg-grey animated-bg m-3'\n                    style={{ width: '60%', height: '.8rem' }}></div>\n                <div className='conent-loader-rect rounded-pill bg-grey animated-bg m-3'\n                    style={{ width: '60%', height: '.8rem' }}></div>\n            </div>);\n        if (this.state.error) {\n            return (\n                <div><Header />\n                    <div className='container project-container'>\n\n                        <ResultView text={this.state.error_msg} />\n                    </div></div>\n            )\n        }\n        else if (this.state.load) {\n            return (\n                <div> <Header />\n                    <div className='container project-container'>\n\n                        <h4 className='title border-bottom'>项目</h4>\n                        <ul>\n                            {project_list}\n                        </ul>\n                    </div></div>\n            );\n        } else {\n            return (\n                <div><Header />\n                    <div className='container project-container'>\n\n                        <div className='conent-loader-rect rounded-pill bg-grey animated-bg m-3'\n                            style={{ width: '25%', height: '.8rem' }}></div>\n                        <ContentLoader />\n                        <ContentLoader />\n                        <ContentLoader />\n                    </div></div>\n\n            )\n        }\n\n    }\n}"],"sourceRoot":""}